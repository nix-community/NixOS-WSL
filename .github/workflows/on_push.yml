name: "On Push"

on:
  push:
    branches:
      - main
      - "release-*"
  pull_request: {}
  workflow_dispatch:
    inputs:
      pr_number:
        description: "Pull Request Number"
        required: false
        default: ""
        type: string
      post_result:
        description: "Post the result of the pipeline to the PR"
        required: false
        default: false
        type: boolean

jobs:
  start:
    name: Pipeline Start
    runs-on: ubuntu-latest
    if: ${{ inputs.post_result }}
    steps:
      - uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b # v3.0.1
        with:
          pr-number: ${{ inputs.pr_number || github.event.pull_request.number }}
          comment-tag: ci-status
          mode: recreate
          create-if-not-exists: true
          message: |
            CI is currently running
            [See the logs here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

  build:
    name: Build 🛠️
    uses: ./.github/workflows/run_build.yml

  checks:
    name: Checks 📋
    uses: ./.github/workflows/run_checks.yml

  tests:
    name: Tests 🧪
    uses: ./.github/workflows/run_tests.yml
    needs:
      - build

  validate:
    name: Validate 🩺
    uses: ./.github/workflows/run_validate.yml
    needs:
      - build

  docs:
    name: Docs 📕
    uses: ./.github/workflows/run_docs.yml

  complete:
    name: Pipeline Passed ✅
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    needs:
      - start
      - build
      - checks
      - tests
      - validate
      - docs
    steps:
      - uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b # v3.0.1
        if: ${{ inputs.post_result }}
        with:
          pr-number: ${{ inputs.pr_number || github.event.pull_request.number }}
          comment-tag: ci-status
          mode: upsert
          message: |
            CI has finished:
            - 📋 Checks: ${{ needs.checks.result && '✅' || '❌' }}
            - 🛠️ Build: ${{ needs.build.result && '✅' || '❌' }}
            - 🧪 Tests: ${{ needs.tests.result && '✅' || '❌' }}
            - 🩺 Validate: ${{ needs.validate.result && '✅' || '❌' }}
            - 📕 Docs: ${{ needs.docs.result && '✅' || '❌' }}

            [See the logs here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
      - shell: pwsh
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          $checks = @{
            "Checks" = "${{ needs.checks.result }}"
            "Build" = "${{ needs.build.result }}"
            "Tests" = "${{ needs.tests.result }}"
            "Validate" = "${{ needs.validate.result }}"
            "Docs" = "${{ needs.docs.result }}"
          }

          $exit = 0
          $checks.GetEnumerator() | % {
            $status = ($_.Value -eq "success") -or ($_.Value -eq "skipped")
            Write-Host "[ $($status ? " OK " : "FAIL") ] $($_.Name)"
            if (-not $status) {
              $exit = 1
            }
          }

          exit $exit
